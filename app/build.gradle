apply plugin: 'com.android.application'
apply from: 'tinker-support.gradle'
apply from: 'multiple-channel.gradle'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.androidCompileSdkVersion
    buildToolsVersion globalConfiguration.androidBuildToolsVersion
    signingConfigs {
        release {
            storeFile file("./keystore/airline.jks")
            storePassword "al123456"
            keyAlias "airline"
            keyPassword "al123456"

        }
        debug {
            storeFile file("./keystore/airline.jks")
            storePassword "al123456"
            keyAlias "airline"
            keyPassword "al123456"
        }
    }


    defaultConfig {
        applicationId "com.example.aroutedemo"
        minSdkVersion globalConfiguration.androidMinSdkVersion
        targetSdkVersion globalConfiguration.androidTargetSdkVersion
        versionCode globalConfiguration.versionCode
        versionName globalConfiguration.versionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions.includeCompileClasspath = true
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            //移除无用的资源文件
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable false
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        //使用JAVA8语法解析
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //thinker
    dexOptions {
        jumboMode = true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    dataBinding {
        enabled = true
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    def androidDependencies = rootProject.ext.androidDependencies
    def viewDependencies = rootProject.ext.viewDependencies
    def dataDependencies = rootProject.ext.dataDependencies
    implementation androidDependencies.appcompat_v7
    implementation androidDependencies.recyclerView
    implementation androidDependencies.design
    implementation androidDependencies.support_v4
    implementation androidDependencies.cardview
    implementation androidDependencies.constraint
    implementation androidDependencies.multidex

    implementation viewDependencies.butterKnife
    annotationProcessor viewDependencies.apt_butterKnife

    annotationProcessor viewDependencies.aptaroutercompiler

    //eventbus
    implementation dataDependencies.eventbus

    // 远程仓库集成方式（推荐）
    implementation dataDependencies.thinkerCrashReportUpgrade
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation dataDependencies.tinkerandroidlib
    implementation project(path: ':modulebase')
    implementation project(path: ':modulePicture')
    if (!isModuleHome.toBoolean()) {
        implementation project(path: ':modulehome')
    }
    if (!isModuleUser.toBoolean()) {
        implementation project(path: ':moduleuser')
    }
    implementation project(path: ':moduleCommon')


}
